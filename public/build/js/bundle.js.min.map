{"version":3,"sources":["app.js","dias-horas.js","ponentes.js","tags.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["","(function() {\r\n    //constantes\r\n    const STRING_VACIO = '';\r\n\r\n    //selectores\r\n    const categoria_id = document.querySelector(\"[name='categoria_id']\");\r\n    const dias = document.querySelectorAll(\"[name='dia']\");\r\n    const inputHiddenDia = document.querySelector(\"[name='dia_id']\");\r\n    const input_hidden_hora = document.querySelector(\"[name='hora_id']\");\r\n\r\n    if(categoria_id) {\r\n        const evento = {\r\n            'categoria_id': parseInt(categoria_id.value ?? STRING_VACIO),\r\n            'dia': parseInt(inputHiddenDia.value ?? STRING_VACIO)\r\n        }\r\n     \r\n        /**\r\n         * APLICA EN MODO EDICION\r\n         * Si el objeto de evento no esta vacío\r\n         */\r\n        if(!Object.values(evento).includes(STRING_VACIO)) {\r\n            \r\n            //crear un selector con el dataset y el id de la hora seleccionada \r\n            const id_hora_seleccionada = parseInt(input_hidden_hora.value);\r\n            const hora_seleccionada = document.querySelector(`[data-hora-id = '${id_hora_seleccionada}']`);\r\n    \r\n            //callback async para esperar a que la funcion obtenerEventos termine su tarea\r\n            //de otro modo agregará la clase horas_hora--desactivada\r\n            (async () => {\r\n                await obtenerEventos();\r\n                if(hora_seleccionada){\r\n                    hora_seleccionada.classList.remove('horas__hora--desactivada');            \r\n                    hora_seleccionada.classList.add('horas__hora--selec');\r\n                    hora_seleccionada.onclick = seleccionarHora;\r\n                }\r\n            })();            \r\n        }\r\n        \r\n    \r\n        if(categoria_id){\r\n            categoria_id.addEventListener('change', terminosDeBusqueda);\r\n            dias.forEach(dia => dia.addEventListener('change', terminosDeBusqueda));\r\n        }\r\n    \r\n        function terminosDeBusqueda(event) {\r\n            evento[event.target.name] = event.target.value;\r\n    \r\n            //reset a los campos ocultos\r\n            input_hidden_hora.value = STRING_VACIO;\r\n            inputHiddenDia.value = STRING_VACIO;\r\n    \r\n            if(!Object.values(evento).includes(STRING_VACIO)) {\r\n                obtenerEventos();\r\n            }  \r\n        }\r\n        \r\n        async function obtenerEventos() {\r\n            \r\n            const {categoria_id, dia} = evento;\r\n            const url = `/api/eventos?categoria_id=${categoria_id}&dia_id=${dia}`;\r\n            \r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const eventos = await respuesta.json();\r\n                obtenerHorasDisponibles(eventos);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }       \r\n        }\r\n    \r\n        \r\n        function obtenerHorasDisponibles(eventos) {\r\n    \r\n            /**\r\n             * Reset de las clases en los elementos li\r\n             * restaurar la clase horas__hora--desactivada\r\n             * eliminar la clase horas__hora--select\r\n             * remover eventListener de los elementos con la clase horas__hora--desactivada\r\n             */\r\n            const listaHoras = document.querySelectorAll('#horas li');\r\n            listaHoras.forEach(li => {\r\n                li.classList.add('horas__hora--desactivada');\r\n            });\r\n            \r\n            horaActiva = document.querySelector('.horas__hora--selec');\r\n            if(horaActiva) {\r\n                horaActiva.classList.remove('horas__hora--selec');\r\n            }\r\n    \r\n            const horasOcupadas = eventos.map(horas => horas.hora_id);\r\n    \r\n            //el selector listaHoras contiene un nodelist, convertirlo en array para utilizar filter()\r\n            const listaHorasArray = Array.from(listaHoras);\r\n    \r\n            //filtrar las horas disponibles\r\n            const resultado = listaHorasArray.filter(hora => !horasOcupadas.includes(hora.dataset.horaId) );\r\n    \r\n            //eliminar la clase .horas__hora--desactivada\r\n            resultado.forEach(hora => hora.classList.remove('horas__hora--desactivada'));\r\n    \r\n            //iterar las horas para agregar un evento que permita seleccionar una hora\r\n            const horasDisponibles = document.querySelectorAll('.horas__hora:not(.horas__hora--desactivada)');\r\n            horasDisponibles.forEach( hora => hora.addEventListener('click', seleccionarHora));\r\n            \r\n            //remover eventListener de los elementos con la clase horas__hora--desactivada\r\n            const horasNoDisponibles = document.querySelectorAll('.horas__hora--desactivada');\r\n            Array.from(horasNoDisponibles).forEach(hora => hora.removeEventListener('click', seleccionarHora));\r\n        }\r\n    \r\n        function seleccionarHora(event) {\r\n    \r\n            //agregar valores a los inputs ocultos\r\n            input_hidden_hora.value = event.target.dataset.horaId;        \r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n            \r\n            //eliminar clase de un elemento previamente seleccionado\r\n            horaActiva = document.querySelector('.horas__hora--selec');\r\n            if(horaActiva) {\r\n                horaActiva.classList.remove('horas__hora--selec');\r\n            }\r\n    \r\n            //agregar clase a la hora seleccionda\r\n            event.target.classList.add('horas__hora--selec');\r\n            \r\n        }\r\n    }\r\n\r\n})();","\r\n////////////////////////////////\r\n(function(){\r\n\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n    \r\n    if(ponentesInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        \r\n        ponentesInput.addEventListener('input', buscarPonentes);\r\n        const listaPonentes = document.querySelector('#lista-ponentes');\r\n        const ponenteHiddenInput = document.querySelector(\"[name='ponente_id']\");\r\n        \r\n        //Si hay algo en el input hidden entonces se esta editando un evento\r\n        if(ponenteHiddenInput.value) {        \r\n            (async() => {\r\n                const ponente = await buscarPonente(ponenteHiddenInput.value);\r\n                \r\n                const {nombre, apellido} = ponente;\r\n                const ponenteHTML = document.createElement('LI');\r\n                ponenteHTML.classList.add('lista-ponentes__ponente', 'lista-ponentes__ponente--seleccionado');\r\n                ponenteHTML.textContent = `${nombre} ${apellido}`;\r\n                listaPonentes.appendChild(ponenteHTML);                \r\n            })();\r\n        }\r\n\r\n        consultarPonentes();\r\n\r\n        /**\r\n         * Obtiene todos los  ponenetes\r\n         */\r\n        async function consultarPonentes() {\r\n\r\n            const url = '/api/ponentes';\r\n            const request = await fetch(url);\r\n            const response= await request.json();\r\n\r\n            formatearPonentes(response);\r\n        }\r\n\r\n\r\n        /**\r\n         * Obtiene solo el ponente requerido\r\n         */\r\n        async function buscarPonente(id) {\r\n            \r\n            const url = `/api/ponente?id=${id}`;\r\n            const request = await fetch(url);\r\n            const response = await request.json();\r\n            return response;\r\n        }\r\n\r\n        function formatearPonentes(arrayResponse = []) {\r\n            ponentes = arrayResponse.map(ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                }\r\n            })  \r\n        }\r\n\r\n        function buscarPonentes(event) {\r\n            const busqueda = event.target.value;\r\n\r\n            if(busqueda.length >= 3) {\r\n                const regexp = new RegExp(busqueda, \"i\");\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    if(ponente.nombre.toLowerCase().search(regexp) !== -1) {\r\n                        return ponente;\r\n                    }\r\n                })          \r\n                \r\n                mostrarPonentesFiltrados();\r\n                return;\r\n            }\r\n\r\n            ponentesFiltrados = [];\r\n            mostrarPonentesFiltrados();\r\n\r\n            //borrar el ponente_id\r\n            ponenteHiddenInput.value = \"\";\r\n        }\r\n\r\n        function mostrarPonentesFiltrados() {\r\n\r\n            while(listaPonentes.firstChild) {\r\n                listaPonentes.removeChild(listaPonentes.firstChild);\r\n            }\r\n\r\n            if(ponentesFiltrados.length) {\r\n                ponentesFiltrados.forEach(ponente => {\r\n                    const li = document.createElement('LI');\r\n                    li.classList.add('lista-ponentes__ponente');\r\n                    li.dataset.ponenteHiddenInput = ponente.id;\r\n                    li.textContent = ponente.nombre;\r\n                    li.onclick = seleccionarPonente;\r\n                    listaPonentes.appendChild(li);  \r\n                })\r\n                return;\r\n            }\r\n            \r\n            const noPonentes = document.createElement('P');\r\n            noPonentes.classList.add('lista-ponentes__no-ponentes');\r\n            noPonentes.textContent = 'No se encontraron resultados';\r\n            listaPonentes.appendChild(noPonentes);\r\n\r\n        }\r\n\r\n        function seleccionarPonente(event) {\r\n\r\n            //agregar clase para darle estilos\r\n            const ponenteSeleccionado = document.querySelector('.lista-ponentes__ponente--seleccionado');\r\n\r\n            if(ponenteSeleccionado) {\r\n                ponenteSeleccionado.classList.remove('lista-ponentes__ponente--seleccionado');\r\n            }\r\n\r\n            event.target.classList.add('lista-ponentes__ponente--seleccionado');\r\n\r\n            //agregar el ponente_id al value\r\n            ponenteHiddenInput.value = event.target.dataset.ponenteHiddenInput;           \r\n        }\r\n    }\r\n\r\n})();","(function(){\r\n    const tagsInput = document.querySelector('#tags_input');\r\n    const tagsHidden = document.querySelector('[name=\"tags\"]');\r\n    const tagsDiv = document.querySelector('#tags');\r\n    \r\n    //si existe el elemento en el html\r\n    if(tagsInput) {\r\n        let tags = [];\r\n\r\n        //verificar si hay datso en el input hidden\r\n        if(tagsHidden.value !== ''){\r\n            tags = tagsHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        tagsInput.addEventListener('keypress', agregarTags);\r\n\r\n        function agregarTags(event) {\r\n            //detectar el keycode de la coma\r\n            if(event.keyCode === 44) {\r\n                //prevenir agregar vacíos o textos con una letra\r\n                if(event.target.value.trim() === '' || event.target.value.length <= 1) {\r\n                    event.preventDefault();\r\n                    //limpiar input\r\n                    tagsInput.value = '';\r\n                    return;\r\n                }\r\n    \r\n                event.preventDefault();\r\n    \r\n                //agregar al arreglo de tags\r\n                tags = [...tags, event.target.value.trim()];\r\n    \r\n                //agregar al input hidden\r\n                agregarTagsInputHidden();\r\n    \r\n                //limpiar input\r\n                tagsInput.value = '';\r\n    \r\n                mostrarTags();\r\n    \r\n            }\r\n        }\r\n    \r\n        function agregarTagsInputHidden() {        \r\n            tagsHidden.value = tags;\r\n        }\r\n    \r\n        function mostrarTags() {\r\n            //remover elementos existentes\r\n            while(tagsDiv.firstChild){\r\n                tagsDiv.removeChild(tagsDiv.firstChild);\r\n            }\r\n    \r\n            tags.forEach(tag => {\r\n                const contenedorTag = document.createElement('DIV');\r\n                contenedorTag.classList.add('formulario__contenedor-tag');\r\n    \r\n                const tagLi = document.createElement('LI');\r\n                tagLi.classList.add('formulario__tag');\r\n                tagLi.textContent = tag;\r\n    \r\n                const icon = document.createElement('I');\r\n                icon.classList.add('fa-regular', 'fa-circle-xmark', 'formulario__tag-icono');\r\n                icon.onclick = eliminarTag;\r\n    \r\n                contenedorTag.appendChild(tagLi);\r\n                contenedorTag.appendChild(icon);\r\n                tagsDiv.appendChild(contenedorTag);\r\n            })\r\n        }\r\n    \r\n        function eliminarTag(event) {\r\n            //remover elemento del DOM\r\n            event.target.parentElement.remove();\r\n    \r\n            //actualizar arreglo\r\n            tags = tags.filter(tag => tag !== event.target.parentElement.firstChild.textContent);\r\n    \r\n            //actualizar el value del input hidden\r\n            agregarTagsInputHidden();\r\n        };\r\n    }\r\n\r\n})();"]}