{"version":3,"sources":["app.js","tags.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["","(function(){\r\n    const tagsInput = document.querySelector('#tags_input');\r\n    const tagsHidden = document.querySelector('[name=\"tags\"]');\r\n    const tagsDiv = document.querySelector('#tags');\r\n    \r\n    //si existe el elemento en el html\r\n    if(tagsInput) {\r\n        let tags = [];\r\n        tagsInput.addEventListener('keypress', agregarTags);\r\n\r\n        function agregarTags(event) {\r\n            //detectar el keycode de la coma\r\n            if(event.keyCode === 44) {\r\n                //prevenir agregar vac√≠os o textos con una letra\r\n                if(event.target.value.trim() === '' || event.target.value.length <= 1) {\r\n                    event.preventDefault();\r\n                    //limpiar input\r\n                    tagsInput.value = '';\r\n                    return;\r\n                }\r\n    \r\n                event.preventDefault();\r\n    \r\n                //agregar al arreglo de tags\r\n                tags = [...tags, event.target.value.trim()];\r\n    \r\n                //agregar al input hidden\r\n                agregarTagsInputHidden();\r\n    \r\n                //limpiar input\r\n                tagsInput.value = '';\r\n    \r\n                mostrarTags();\r\n    \r\n            }\r\n        }\r\n    \r\n        function agregarTagsInputHidden() {        \r\n            tagsHidden.value = tags;\r\n        }\r\n    \r\n        function mostrarTags() {\r\n            //remover elementos existentes\r\n            while(tagsDiv.firstChild){\r\n                tagsDiv.removeChild(tagsDiv.firstChild);\r\n            }\r\n    \r\n            tags.forEach(tag => {\r\n                const contenedorTag = document.createElement('DIV');\r\n                contenedorTag.classList.add('formulario__contenedor-tag');\r\n    \r\n                const tagLi = document.createElement('LI');\r\n                tagLi.classList.add('formulario__tag');\r\n                tagLi.textContent = tag;\r\n    \r\n                const icon = document.createElement('I');\r\n                icon.classList.add('fa-regular', 'fa-circle-xmark', 'formulario__tag-icono');\r\n                icon.onclick = eliminarTag;\r\n    \r\n                contenedorTag.appendChild(tagLi);\r\n                contenedorTag.appendChild(icon);\r\n                tagsDiv.appendChild(contenedorTag);\r\n            })\r\n        }\r\n    \r\n        function eliminarTag(event) {\r\n            //remover elemento del DOM\r\n            event.target.parentElement.remove();\r\n    \r\n            //actualizar arreglo\r\n            tags = tags.filter(tag => tag !== event.target.parentElement.firstChild.textContent);\r\n    \r\n            //actualizar el value del input hidden\r\n            agregarTagsInputHidden();\r\n        };\r\n    }\r\n\r\n})();"]}